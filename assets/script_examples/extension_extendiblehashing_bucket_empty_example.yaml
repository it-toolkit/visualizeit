name: "Extendible Hashing Example - Bucket Empty"
group: "DB data structures and algorithms"
description: |-
  ## Extendible Hashing in Direct Files Example - Bucket Empty

  In this example it is possible to create a file organized with the extensible hashing technique. Where you can select the size of the buckets that will contain fixed length records. It is also possible to select an initial state of the file.
  In the extensible hashing technique, the hash function will be used to access the table (hash table) of bucket addresses. This extensible version of hashing is also known as postfix bits because it considers the last bits of a record key to determine in the hash table the bucket number that the record contains.

  This example shows a simple insert and some deletions that generates some freed buckets and one empty bucket. The hash table ends up being reduced to the half.

scenes:
  - name: Extendible Hashing in Direct Files Example - Bucket Empty
    extensions: ['extendible_hashing']
    initial-state:
      - extendiblehashing-create:
          bucketSize: 3
          initialValues: [270, 946, 741, 446, 123, 376, 458, 954,
                          973, 426, 410, 789, 484, 305, 462, 809]
    transitions:
      - extendiblehashing-insert: 459
      - extendiblehashing-remove: 305
      - extendiblehashing-remove: 809
      - extendiblehashing-remove: 946
      - extendiblehashing-remove: 410
      - extendiblehashing-remove: 954